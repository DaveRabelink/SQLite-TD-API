.head 0 +  Application Description: ____________________________________________________________________
SQLite3 API 	BASE

Source version:	1.0.0	(TD 2.1 and up)
SQLite3 version:	3.26.0

Description:
Contains most of SQLite3 API declarations which are shared between TD ANSI and UNICODE versions.

See SQLite website for documentation and latest downloads:

www.sqlite.org

Created by 	Dave Rabelink	19-12-2018
Updated by
____________________________________________________________________
.head 1 -  Outline Version - 4.0.28
.head 1 +  Design-time Settings
.data VIEWINFO
0000: 6F00000001000000 FFFF01000D004347 5458566965775374 6174650400010000
0020: 0000000000C20000 002C000000020000 0003000000FFFFFF FFFFFFFFFFF8FFFF
0040: FFE1FFFFFF320000 00320000008A0200 00EF010000010000 0001000000010000
0060: 000F4170706C6963 6174696F6E497465 6D00000000
.enddata
.data DT_MAKERUNDLG
0000: 0900001003000000 001453514C697465 335F4150495F4261 73652E6578651453
0020: 514C697465335F41 50495F426173652E 646C6C1453514C69 7465335F4150495F
0040: 426173652E617063 0000010101006400 0000000000000000 0000000000000014
0060: 53514C697465335F 4150495F42617365 2E6170641453514C 697465335F415049
0080: 5F426173652E646C 6C1453514C697465 335F4150495F4261 73652E6170630000
00A0: 0101010064000000 1453514C69746533 5F4150495F426173 652E61706C145351
00C0: 4C697465335F4150 495F426173652E64 6C6C1453514C6974 65335F4150495F42
00E0: 6173652E61706300 0001010100640000 001453514C697465 335F4150495F4261
0100: 73652E6578651453 514C697465335F41 50495F426173652E 646C6C1453514C69
0120: 7465335F4150495F 426173652E617063 0000010101006400 00001453514C6974
0140: 65335F4150495F42 6173652E646C6C14 53514C697465335F 4150495F42617365
0160: 2E646C6C1453514C 697465335F415049 5F426173652E6170 6300000101010064
0180: 0000001453514C69 7465335F4150495F 426173652E646C6C 1453514C69746533
01A0: 5F4150495F426173 652E646C6C145351 4C697465335F4150 495F426173652E61
01C0: 7063000001010100 6400000000000000 0000000000000000 0000000000000000
01E0: 0000000000000100 0000010000000100 0100000000000000 0001000010000000
0200: 0000000000000000 00
.enddata
.head 2 -  Outline Window State: Normal
.head 2 +  Outline Window Location and Size
.head 3 -  Left: Default
.head 3 -  Top: Default
.head 3 -  Width:  Default
.head 3 -  Height: Default
.head 2 +  Options Box Location
.head 3 -  Visible? Yes
.head 3 -  Left: Default
.head 3 -  Top: Default
.head 3 -  Width:  Default
.head 3 -  Height: Default
.head 2 +  Class Editor Location
.head 3 -  Visible? No
.head 3 -  Left: Default
.head 3 -  Top: Default
.head 3 -  Width:  Default
.head 3 -  Height: Default
.head 2 +  Tool Palette Location
.head 3 -  Visible? No
.head 3 -  Left: Default
.head 3 -  Top: Default
.head 2 -  Fully Qualified External References? Yes
.head 2 -  Reject Multiple Window Instances? No
.head 2 -  Enable Runtime Checks Of External References? Yes
.head 2 -  Use Release 4.0 Scope Rules? No
.head 2 -  ! Edit Fields Read Only On Disable? No
.head 2 -  ! Assembly Symbol File:
.head 1 -  Libraries
.head 1 +  Global Declarations
.head 2 +  Window Defaults
.head 3 +  Tool Bar
.head 4 -  Display Style? Etched
.head 4 -  Font Name: Microsoft Sans Serif
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Form Window
.head 4 -  Display Style? Etched
.head 4 -  Font Name: Microsoft Sans Serif
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Dialog Box
.head 4 -  Display Style? Etched
.head 4 -  Font Name: Microsoft Sans Serif
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Top Level Table Window
.head 4 -  Font Name: Microsoft Sans Serif
.head 4 -  Font Size: System Default
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Data Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Multiline Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Spin Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Background Text
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Pushbutton
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Radio Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Check Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Option Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Group Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Child Table Window
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  List Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Combo Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Line
.head 4 -  Line Color: Use Parent
.head 3 +  Frame
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Picture
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 2 +  Formats
.head 3 -  Number: 0'%'
.head 3 -  Number: #0
.head 3 -  Number: ###000
.head 3 -  Number: ###000;'('###000')'
.head 3 -  Date/Time: hh:mm:ss AMPM
.head 3 -  Date/Time: M/d/yy
.head 3 -  Date/Time: MM-dd-yy
.head 3 -  Date/Time: dd-MMM-yyyy
.head 3 -  Date/Time: MMM d, yyyy
.head 3 -  Date/Time: MMM d, yyyy hh:mm AMPM
.head 3 -  Date/Time: MMMM d, yyyy hh:mm AMPM
.head 2 +  External Functions
.head 3 +  Library name: sqlite3.dll
.head 4 -  ThreadSafe: Yes
.head 4 +  Function: sqlite3_backup_finish			! WRAPPED
.head 5 -  Description: int sqlite3_backup_finish(sqlite3_backup *p);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_backup_init				! WRAPPED UTF8
.head 5 -  Description: sqlite3_backup *sqlite3_backup_init(
  sqlite3 *pDest,                        /* Destination database handle */
  const char *zDestName,                 /* Destination database name */
  sqlite3 *pSource,                      /* Source database handle */
  const char *zSourceName                /* Source database name */
);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_backup_pagecount			! WRAPPED
.head 5 -  Description: int sqlite3_backup_pagecount(sqlite3_backup *p);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_backup_remaining			! WRAPPED
.head 5 -  Description: int sqlite3_backup_remaining(sqlite3_backup *p);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_backup_step			! WRAPPED
.head 5 -  Description: int sqlite3_backup_step(sqlite3_backup *p, int nPage);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_bind_blob				! WRAPPED
.head 5 -  Description: int sqlite3_bind_blob(sqlite3_stmt*, int, const void*, int n, void(*)(void*));
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_bind_double				! WRAPPED
.head 5 -  Description: int sqlite3_bind_double(sqlite3_stmt*, int, double);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: DOUBLE
.head 4 +  Function: sqlite3_bind_int				! WRAPPED
.head 5 -  Description: int sqlite3_bind_int(sqlite3_stmt*, int, int);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_bind_null				! WRAPPED
.head 5 -  Description: int sqlite3_bind_null(sqlite3_stmt*, int);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_bind_parameter_count			! WRAPPED
.head 5 -  Description: int sqlite3_bind_parameter_count(sqlite3_stmt*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_bind_parameter_index			! WRAPPED UTF8
.head 5 -  Description: int sqlite3_bind_parameter_index(sqlite3_stmt*, const char *zName);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_bind_parameter_name			! WRAPPED UTF8
.head 5 -  Description: const char *sqlite3_bind_parameter_name(sqlite3_stmt*, int);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_bind_value				! WRAPPED
.head 5 -  Description: int sqlite3_bind_value(sqlite3_stmt*, int, const sqlite3_value*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_changes				! WRAPPED
.head 5 -  Description: int sqlite3_changes(sqlite3*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_clear_bindings			! WRAPPED
.head 5 -  Description: int sqlite3_clear_bindings(sqlite3_stmt*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_close				! WRAPPED
.head 5 -  Description: int sqlite3_close(sqlite3*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_close_v2				! WRAPPED
.head 5 -  Description: int sqlite3_close_v2(sqlite3*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_column_blob				! WRAPPED
.head 5 -  Description: const void *sqlite3_column_blob(sqlite3_stmt*, int iCol);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_column_bytes			! WRAPPED
.head 5 -  Description: int sqlite3_column_bytes(sqlite3_stmt*, int iCol);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_column_count			! WRAPPED
.head 5 -  Description: int sqlite3_column_count(sqlite3_stmt *pStmt);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_column_double			! WRAPPED
.head 5 -  Description: double sqlite3_column_double(sqlite3_stmt*, int iCol);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: DOUBLE
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_column_int				! WRAPPED
.head 5 -  Description: int sqlite3_column_int(sqlite3_stmt*, int iCol);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_column_type				! WRAPPED
.head 5 -  Description: int sqlite3_column_type(sqlite3_stmt*, int iCol);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_column_value			! WRAPPED
.head 5 -  Description: sqlite3_value *sqlite3_column_value(sqlite3_stmt*, int iCol);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_compileoption_get			! WRAPPED UTF8
.head 5 -  Description: const char *sqlite3_compileoption_get(int N);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_compileoption_used			! WRAPPED UTF8
.head 5 -  Description: int sqlite3_compileoption_used(const char *zOptName);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_data_count				! WRAPPED
.head 5 -  Description: int sqlite3_data_count(sqlite3_stmt *pStmt);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_db_cacheflush			! WRAPPED
.head 5 -  Description: int sqlite3_db_cacheflush(sqlite3*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_db_filename				! WRAPPED UTF8
.head 5 -  Description: const char *sqlite3_db_filename(sqlite3 *db, const char *zDbName);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_db_handle				! WRAPPED
.head 5 -  Description: sqlite3 *sqlite3_db_handle(sqlite3_stmt*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_db_mutex				! WRAPPED
.head 5 -  Description: sqlite3_mutex *sqlite3_db_mutex(sqlite3*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_db_readonly				! WRAPPED UTF8
.head 5 -  Description: int sqlite3_db_readonly(sqlite3 *db, const char *zDbName);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_db_release_memory			! WRAPPED
.head 5 -  Description: int sqlite3_db_release_memory(sqlite3*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_db_status				! WRAPPED
.head 5 -  Description: int sqlite3_db_status(sqlite3*, int op, int *pCur, int *pHiwtr, int resetFlg);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  Receive Number: LPINT
.head 6 -  Receive Number: LPINT
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_declare_vtab			! WRAPPED UTF8
.head 5 -  Description: int sqlite3_declare_vtab(sqlite3*, const char *zSQL);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_enable_load_extension		! WRAPPED
.head 5 -  Description: int sqlite3_enable_load_extension(sqlite3 *db, int onoff);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_enable_shared_cache			! WRAPPED
.head 5 -  Description: int sqlite3_enable_shared_cache(int);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_errcode				! WRAPPED
.head 5 -  Description: int sqlite3_errcode(sqlite3 *db);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_errstr				! WRAPPED UTF8
.head 5 -  Description: const char *sqlite3_errstr(int);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_expanded_sql			! WRAPPED UTF8
.head 5 -  Description: char *sqlite3_expanded_sql(sqlite3_stmt *pStmt);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_extended_errcode			! WRAPPED
.head 5 -  Description: int sqlite3_extended_errcode(sqlite3 *db);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_extended_result_codes		! WRAPPED
.head 5 -  Description: int sqlite3_extended_result_codes(sqlite3*, int onoff);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_finalize				! WRAPPED
.head 5 -  Description: int sqlite3_finalize(sqlite3_stmt *pStmt);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_free				! WRAPPED
.head 5 -  Description: void sqlite3_free(void*);
.head 5 -  Export Ordinal: 0
.head 5 -  Returns
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_get_autocommit			! WRAPPED
.head 5 -  Description: int sqlite3_get_autocommit(sqlite3*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_initialize				! WRAPPED
.head 5 -  Description: int sqlite3_initialize(void);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: sqlite3_interrupt				! WRAPPED
.head 5 -  Description: void sqlite3_interrupt(sqlite3*);
.head 5 -  Export Ordinal: 0
.head 5 -  Returns
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_keyword_check			! WRAPPED UTF8
.head 5 -  Description: int sqlite3_keyword_check(const char*,int);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_keyword_count			! WRAPPED
.head 5 -  Description: int sqlite3_keyword_count(void);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: sqlite3_keyword_name			! WRAPPED UTF8
.head 5 -  Description: int sqlite3_keyword_name(int,const char**,int*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  Receive Number: LPLPVOID
.head 6 -  Receive Number: LPINT
.head 4 +  Function: sqlite3_libversion				! WRAPPED UTF8
.head 5 -  Description: const char *sqlite3_libversion(void);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 -  Parameters
.head 4 +  Function: sqlite3_libversion_number			! WRAPPED
.head 5 -  Description: int sqlite3_libversion_number(void);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: sqlite3_limit				! WRAPPED
.head 5 -  Description: int sqlite3_limit(sqlite3*, int id, int newVal);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_load_extension			! WRAPPED UTF8
.head 5 -  Description: int sqlite3_load_extension(
  sqlite3 *db,          /* Load the extension into this database connection */
  const char *zFile,    /* Name of the shared library containing extension */
  const char *zProc,    /* Entry point.  Derived from zFile if 0 */
  char **pzErrMsg       /* Put error message here if not 0 */
);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Receive Number: LPLPVOID
.head 4 +  Function: sqlite3_malloc				! WRAPPED
.head 5 -  Description: void *sqlite3_malloc(int);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_next_stmt				! WRAPPED
.head 5 -  Description: sqlite3_stmt *sqlite3_next_stmt(sqlite3 *pDb, sqlite3_stmt *pStmt);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_open_v2				! WRAPPED UTF8
.head 5 -  Description: int sqlite3_open_v2(
  const char *filename,   /* Database filename (UTF-8) */
  sqlite3 **ppDb,         /* OUT: SQLite db handle */
  int flags,              /* Flags */
  const char *zVfs        /* Name of VFS module to use */
);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Receive Number: LPLPVOID
.head 6 -  Number: INT
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_os_end				! WRAPPED
.head 5 -  Description: int sqlite3_os_end(void);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: sqlite3_os_init				! WRAPPED
.head 5 -  Description: int sqlite3_os_init(void);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: sqlite3_overload_function			! WRAPPED UTF8
.head 5 -  Description: int sqlite3_overload_function(sqlite3*, const char *zFuncName, int nArg);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_realloc				! WRAPPED
.head 5 -  Description: void *sqlite3_realloc(void*, int);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_release_memory			! WRAPPED
.head 5 -  Description: int sqlite3_release_memory(int);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_reset				! WRAPPED
.head 5 -  Description: int sqlite3_reset(sqlite3_stmt *pStmt);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_reset_auto_extension			! WRAPPED
.head 5 -  Description: void sqlite3_reset_auto_extension(void);
.head 5 -  Export Ordinal: 0
.head 5 -  Returns
.head 5 -  Parameters
.head 4 +  Function: sqlite3_shutdown				! WRAPPED
.head 5 -  Description: int sqlite3_shutdown(void);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: sqlite3_sleep				! WRAPPED
.head 5 -  Description: int sqlite3_sleep(int);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_sourceid				! WRAPPED UTF8
.head 5 -  Description: const char *sqlite3_sourceid(void);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 -  Parameters
.head 4 +  Function: sqlite3_sql				! WRAPPED UTF8
.head 5 -  Description: const char *sqlite3_sql(sqlite3_stmt *pStmt);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_status				! WRAPPED
.head 5 -  Description: int sqlite3_status(int op, int *pCurrent, int *pHighwater, int resetFlag);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  Receive Number: LPINT
.head 6 -  Receive Number: LPINT
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_step				! WRAPPED
.head 5 -  Description: int sqlite3_step(sqlite3_stmt*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_stmt_busy				! WRAPPED
.head 5 -  Description: int sqlite3_stmt_busy(sqlite3_stmt*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_stmt_readonly			! WRAPPED
.head 5 -  Description: int sqlite3_stmt_readonly(sqlite3_stmt *pStmt);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_stmt_status				! WRAPPED
.head 5 -  Description: int sqlite3_stmt_status(sqlite3_stmt*, int op,int resetFlg);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_strglob				! WRAPPED UTF8
.head 5 -  Description: int sqlite3_strglob(const char *zGlob, const char *zStr);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_stricmp				! WRAPPED UTF8
.head 5 -  Description: int sqlite3_stricmp(const char *, const char *);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_strlike				! WRAPPED UTF8
.head 5 -  Description: int sqlite3_strlike(const char *zGlob, const char *zStr, unsigned int cEsc);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: UINT
.head 4 +  Function: sqlite3_strnicmp				! WRAPPED UTF8
.head 5 -  Description: int sqlite3_strnicmp(const char *, const char *, int);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_system_errno			! WRAPPED
.head 5 -  Description: int sqlite3_system_errno(sqlite3*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_table_column_metadata		! WRAPPED UTF8
.head 5 -  Description: int sqlite3_table_column_metadata(
  sqlite3 *db,                /* Connection handle */
  const char *zDbName,        /* Database name or NULL */
  const char *zTableName,     /* Table name */
  const char *zColumnName,    /* Column name */
  char const **pzDataType,    /* OUTPUT: Declared data type */
  char const **pzCollSeq,     /* OUTPUT: Collation sequence name */
  int *pNotNull,              /* OUTPUT: True if NOT NULL constraint exists */
  int *pPrimaryKey,           /* OUTPUT: True if column part of PK */
  int *pAutoinc               /* OUTPUT: True if column is auto-increment */
);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Receive Number: LPLPVOID
.head 6 -  Receive Number: LPLPVOID
.head 6 -  Receive Number: LPINT
.head 6 -  Receive Number: LPINT
.head 6 -  Receive Number: LPINT
.head 4 +  Function: sqlite3_threadsafe				! WRAPPED
.head 5 -  Description: int sqlite3_threadsafe(void);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: sqlite3_total_changes			! WRAPPED
.head 5 -  Description: int sqlite3_total_changes(sqlite3*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 4 +  Function: sqlite3_uri_boolean				! WRAPPED UTF8
.head 5 -  Description: int sqlite3_uri_boolean(const char *zFile, const char *zParam, int bDefault);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: sqlite3_uri_parameter			! WRAPPED UTF8
.head 5 -  Description: const char *sqlite3_uri_parameter(const char *zFilename, const char *zParam);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LPVOID
.head 5 +  Parameters
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 -  !
.head 4 -  ! Below methods not supported, obsoleted or using callbacks or are too specific or not yet implemented in TD
.head 4 +  ! Function: sqlite3_str_errcode
.head 5 -  Description: int sqlite3_str_errcode(sqlite3_str*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_str_length
.head 5 -  Description: int sqlite3_str_length(sqlite3_str*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_str_new
.head 5 -  Description: sqlite3_str *sqlite3_str_new(sqlite3*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: LPVOID
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_str_reset
.head 5 -  Description: void sqlite3_str_reset(sqlite3_str*);
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_str_value
.head 5 -  Description: char *sqlite3_str_value(sqlite3_str*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: LPVOID
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_randomness
.head 5 -  Description: void sqlite3_randomness(int N, void *P);
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 +  Parameters 
.head 6 -  Number: INT
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_mutex_alloc
.head 5 -  Description: sqlite3_mutex *sqlite3_mutex_alloc(int);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: LPVOID
.head 5 +  Parameters 
.head 6 -  Number: INT
.head 4 +  ! Function: sqlite3_mutex_enter
.head 5 -  Description: void sqlite3_mutex_enter(sqlite3_mutex*);
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_mutex_free
.head 5 -  Description: void sqlite3_mutex_free(sqlite3_mutex*);
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_mutex_leave
.head 5 -  Description: void sqlite3_mutex_leave(sqlite3_mutex*);
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_mutex_try
.head 5 -  Description: int sqlite3_mutex_try(sqlite3_mutex*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_db_config				! Dynamic params
.head 5 -  Description: int sqlite3_db_config(sqlite3*, int op, ...);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  ! Number: INT		! Num params dependant on option ID
.head 4 +  ! Function: sqlite3_blob_bytes
.head 5 -  Description: int sqlite3_blob_bytes(sqlite3_blob *);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_blob_close
.head 5 -  Description: int sqlite3_blob_close(sqlite3_blob *);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_blob_read
.head 5 -  Description: int sqlite3_blob_read(sqlite3_blob *, void *Z, int N, int iOffset);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 4 +  ! Function: sqlite3_blob_write
.head 5 -  Description: int sqlite3_blob_write(sqlite3_blob *, const void *z, int n, int iOffset);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  String: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 4 +  ! Function: sqlite3_bind_zeroblob
.head 5 -  Description: int sqlite3_bind_zeroblob(sqlite3_stmt*, int, int n);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 4 +  ! Function: sqlite3_aggregate_context
.head 5 -  Description: void *sqlite3_aggregate_context(sqlite3_context*, int nBytes);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: LPVOID
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_auto_extension
.head 5 -  Description: int sqlite3_auto_extension(void(*xEntryPoint)(void));
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_busy_handler
.head 5 -  Description: int sqlite3_busy_handler(sqlite3*,int(*)(void*,int),void*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  Receive Number: LPLPVOID
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_busy_timeout
.head 5 -  Description: int sqlite3_busy_timeout(sqlite3*, int ms);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  ! Function: sqlite3_cancel_auto_extension
.head 5 -  Description: int sqlite3_cancel_auto_extension(void(*xEntryPoint)(void));
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_vfs_find
.head 5 -  Description: sqlite3_vfs *sqlite3_vfs_find(const char *zVfsName);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: LPVOID
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_vfs_register
.head 5 -  Description: int sqlite3_vfs_register(sqlite3_vfs*, int makeDflt);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 4 +  ! Function: sqlite3_vfs_unregister
.head 5 -  Description: int sqlite3_vfs_unregister(sqlite3_vfs*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_value_blob
.head 5 -  Description: const void *sqlite3_value_blob(sqlite3_value*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: LPVOID
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_value_bytes
.head 5 -  Description: int sqlite3_value_bytes(sqlite3_value*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_value_double
.head 5 -  Description: double sqlite3_value_double(sqlite3_value*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: DOUBLE
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_value_dup
.head 5 -  Description: sqlite3_value *sqlite3_value_dup(const sqlite3_value*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: LPVOID
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_value_free
.head 5 -  Description: void sqlite3_value_free(sqlite3_value*);
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_value_int
.head 5 -  Description: int sqlite3_value_int(sqlite3_value*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_value_nochange
.head 5 -  Description: int sqlite3_value_nochange(sqlite3_value*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_value_numeric_type
.head 5 -  Description: int sqlite3_value_numeric_type(sqlite3_value*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_value_pointer
.head 5 -  Description: void *sqlite3_value_pointer(sqlite3_value*, const char*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: LPVOID
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_value_subtype
.head 5 -  Description: unsigned int sqlite3_value_subtype(sqlite3_value*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: UINT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_value_text
.head 5 -  Description: const unsigned char *sqlite3_value_text(sqlite3_value*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: LPVOID
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_value_type
.head 5 -  Description: int sqlite3_value_type(sqlite3_value*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_user_data
.head 5 -  Description: void *sqlite3_user_data(sqlite3_context*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: LPVOID
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_file_control
.head 5 -  Description: int sqlite3_file_control(sqlite3*, const char *zDbName, int op, void*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_bind_pointer
.head 5 -  Description: int sqlite3_bind_pointer(sqlite3_stmt*, int, void*, const char*,void(*)(void*));
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: LPVOID
.head 6 -  String: LPSTR
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_aggregate_count		! Obsoleted
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 4 +  ! Function: sqlite3_commit_hook		! Using callback
.head 5 -  Description: void *sqlite3_commit_hook(sqlite3*, int(*)(void*), void*);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: LPVOID
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_create_collation		! Using callback
.head 5 -  Description: int sqlite3_create_collation(
  sqlite3*, 
  const char *zName, 
  int eTextRep, 
  void *pArg,
  int(*xCompare)(void*,int,const void*,int,const void*)
);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  String: LPSTR
.head 6 -  Number: INT
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_create_collation16		! Using callback
.head 5 -  Description: int sqlite3_create_collation16(
  sqlite3*, 
  const void *zName,
  int eTextRep, 
  void *pArg,
  int(*xCompare)(void*,int,const void*,int,const void*)
);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  String: LPWSTR
.head 6 -  Number: INT
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_create_collation_v2		! Using callback
.head 5 -  Description: int sqlite3_create_collation_v2(
  sqlite3*, 
  const char *zName, 
  int eTextRep, 
  void *pArg,
  int(*xCompare)(void*,int,const void*,int,const void*),
  void(*xDestroy)(void*)
);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  String: LPSTR
.head 6 -  Number: INT
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_exec			! Using callback
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  String: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: LPVOID
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_expired			! Obsoleted
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 4 +  ! Function: sqlite3_free_table			! Obsoleted
.head 5 -  Description: void sqlite3_free_table(char **result);
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 4 +  ! Function: sqlite3_get_auxdata		! Using callback	
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 4 +  ! Function: sqlite3_get_table			! Obsoleted
.head 5 -  Description: int sqlite3_get_table(
  sqlite3 *db,          /* An open database */
  const char *zSql,     /* SQL to be evaluated */
  char ***pazResult,    /* Results of the query */
  int *pnRow,           /* Number of result rows written here */
  int *pnColumn,        /* Number of result columns written here */
  char **pzErrmsg       /* Error msg written here */
);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: LPVOID
.head 6 -  String: LPSTR
.head 6 -  Receive String: LPSTR
.head 6 -  Receive Number: LPINT
.head 6 -  Receive Number: LPINT
.head 6 -  Receive String: LPSTR
.head 4 +  ! Function: sqlite3_progress_handler		! Using callback	
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 4 +  ! Function: sqlite3_rollback_hook		! Using callback	
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 4 +  ! Function: sqlite3_rtree_geometry_callback	! Using callback	
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 4 +  ! Function: sqlite3_rtree_query_callback		! Using callback	
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 4 +  ! Function: sqlite3_set_authorizer		! Using callback	
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 4 +  ! Function: sqlite3_set_auxdata		! Using callback	
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 4 +  ! Function: sqlite3_trace_v2			! Using callback
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 4 +  ! Function: sqlite3_update_hook		! Using callback	
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 4 +  ! Function: sqlite3_log			! dynamic todo
.head 5 -  Description: void sqlite3_log(int iErrCode, const char *zFormat, ...);
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 +  Parameters 
.head 6 -  Number: INT
.head 6 -  String: LPSTR
.head 4 +  ! Function: sqlite3_config			! dynamic todo
.head 5 -  Description: int sqlite3_config(int, ...);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: INT
.head 4 +  ! Function: sqlite3_win32_set_directory8
.head 5 -  Description: int sqlite3_win32_set_directory8(unsigned long type, const char *zValue);
.head 5 -  Export Ordinal: 0
.head 5 +  Returns 
.head 6 -  Number: INT
.head 5 +  Parameters 
.head 6 -  Number: ULONG
.head 6 -  Number: LPVOID
.head 4 +  ! Function: sqlite3_win32_write_debug
.head 5 -  Description: 
.head 5 -  Export Ordinal: 0
.head 5 -  Returns 
.head 5 -  Parameters 
.head 2 +  Constants
.data CCDATA
0000: 3000000000000000 0000000000000000 00000000
.enddata
.data CCSIZE
0000: 1400
.enddata
.head 3 +  System
.head 4 -  ! Fundamental Datatypes		>>>>
.head 4 -  Number: SQLITE_INTEGER		= 1
.head 4 -  Number: SQLITE_FLOAT		= 2
.head 4 -  Number: SQLITE_TEXT		= 3
.head 4 -  Number: SQLITE_BLOB		= 4
.head 4 -  Number: SQLITE_NULL		= 5
.head 4 -  !
.head 4 -  ! Primary Result Codes		>>>>
.head 4 -  Number: SQLITE_OK		= 0	! Successful result */
.head 4 -  Number: SQLITE_ERROR		= 1	! Generic error */
.head 4 -  Number: SQLITE_INTERNAL		= 2	! Internal logic error in SQLite */
.head 4 -  Number: SQLITE_PERM		= 3	! Access permission denied */
.head 4 -  Number: SQLITE_ABORT		= 4	! Callback routine requested an abort */
.head 4 -  Number: SQLITE_BUSY		= 5	! The database file is locked */
.head 4 -  Number: SQLITE_LOCKED		= 6	! A table in the database is locked */
.head 4 -  Number: SQLITE_NOMEM		= 7	! A malloc() failed */
.head 4 -  Number: SQLITE_READONLY	= 8	! Attempt to write a readonly database */
.head 4 -  Number: SQLITE_INTERRUPT	= 9	! Operation terminated by sqlite3_interrupt()*/
.head 4 -  Number: SQLITE_IOERR		= 10	! Some kind of disk I/O error occurred */
.head 4 -  Number: SQLITE_CORRUPT		= 11	! The database disk image is malformed */
.head 4 -  Number: SQLITE_NOTFOUND	= 12	! Unknown opcode in sqlite3_file_control() */
.head 4 -  Number: SQLITE_FULL		= 13	! Insertion failed because database is full */
.head 4 -  Number: SQLITE_CANTOPEN	= 14	! Unable to open the database file */
.head 4 -  Number: SQLITE_PROTOCOL	= 15	! Database lock protocol error */
.head 4 -  Number: SQLITE_EMPTY		= 16	! Internal use only */
.head 4 -  Number: SQLITE_SCHEMA		= 17	! The database schema changed */
.head 4 -  Number: SQLITE_TOOBIG		= 18	! String or BLOB exceeds size limit */
.head 4 -  Number: SQLITE_CONSTRAINT	= 19	! Abort due to constraint violation */
.head 4 -  Number: SQLITE_MISMATCH	= 20	! Data type mismatch */
.head 4 -  Number: SQLITE_MISUSE		= 21	! Library used incorrectly */
.head 4 -  Number: SQLITE_NOLFS		= 22	! Uses OS features not supported on host */
.head 4 -  Number: SQLITE_AUTH		= 23	! Authorization denied */
.head 4 -  Number: SQLITE_FORMAT		= 24	! Not used */
.head 4 -  Number: SQLITE_RANGE		= 25	! 2nd parameter to sqlite3_bind out of range */
.head 4 -  Number: SQLITE_NOTADB		= 26	! File opened that is not a database file */
.head 4 -  Number: SQLITE_NOTICE		= 27	! Notifications from sqlite3_log() */
.head 4 -  Number: SQLITE_WARNING		= 28	! Warnings from sqlite3_log() */
.head 4 -  Number: SQLITE_ROW		= 100	! sqlite3_step() has another row ready */
.head 4 -  Number: SQLITE_DONE		= 101	! sqlite3_step() has finished executing */
.head 4 -  !
.head 4 -  ! Flags For File Open Operations		>>>>
.head 4 -  Number: SQLITE_OPEN_READONLY		= 0x00000001	! Okforsqlite3_open_v2()*/
.head 4 -  Number: SQLITE_OPEN_READWRITE		= 0x00000002	! Okforsqlite3_open_v2()*/
.head 4 -  Number: SQLITE_OPEN_CREATE		= 0x00000004	! Okforsqlite3_open_v2()*/
.head 4 -  Number: SQLITE_OPEN_DELETEONCLOSE	= 0x00000008	! VFSonly*/
.head 4 -  Number: SQLITE_OPEN_EXCLUSIVE		= 0x00000010	! VFSonly*/
.head 4 -  Number: SQLITE_OPEN_AUTOPROXY		= 0x00000020	! VFSonly*/
.head 4 -  Number: SQLITE_OPEN_URI			= 0x00000040	! Okforsqlite3_open_v2()*/
.head 4 -  Number: SQLITE_OPEN_MEMORY		= 0x00000080	! Okforsqlite3_open_v2()*/
.head 4 -  Number: SQLITE_OPEN_MAIN_DB		= 0x00000100	! VFSonly*/
.head 4 -  Number: SQLITE_OPEN_TEMP_DB		= 0x00000200	! VFSonly*/
.head 4 -  Number: SQLITE_OPEN_TRANSIENT_DB	= 0x00000400	! VFSonly*/
.head 4 -  Number: SQLITE_OPEN_MAIN_JOURNAL	= 0x00000800	! VFSonly*/
.head 4 -  Number: SQLITE_OPEN_TEMP_JOURNAL	= 0x00001000	! VFSonly*/
.head 4 -  Number: SQLITE_OPEN_SUBJOURNAL	= 0x00002000	! VFSonly*/
.head 4 -  Number: SQLITE_OPEN_MASTER_JOURNAL	= 0x00004000	! VFSonly*/
.head 4 -  Number: SQLITE_OPEN_NOMUTEX		= 0x00008000	! Okforsqlite3_open_v2()*/
.head 4 -  Number: SQLITE_OPEN_FULLMUTEX		= 0x00010000	! Okforsqlite3_open_v2()*/
.head 4 -  Number: SQLITE_OPEN_SHAREDCACHE	= 0x00020000	! Okforsqlite3_open_v2()*/
.head 4 -  Number: SQLITE_OPEN_PRIVATECACHE	= 0x00040000	! Okforsqlite3_open_v2()*/
.head 4 -  Number: SQLITE_OPEN_WAL		= 0x00080000	! VFSonly*/
.head 4 -  !
.head 4 -  Number: SQLITE_IOCAP_ATOMIC			= 0x00000001
.head 4 -  Number: SQLITE_IOCAP_ATOMIC512			= 0x00000002
.head 4 -  Number: SQLITE_IOCAP_ATOMIC1K			= 0x00000004
.head 4 -  Number: SQLITE_IOCAP_ATOMIC2K			= 0x00000008
.head 4 -  Number: SQLITE_IOCAP_ATOMIC4K			= 0x00000010
.head 4 -  Number: SQLITE_IOCAP_ATOMIC8K			= 0x00000020
.head 4 -  Number: SQLITE_IOCAP_ATOMIC16K			= 0x00000040
.head 4 -  Number: SQLITE_IOCAP_ATOMIC32K			= 0x00000080
.head 4 -  Number: SQLITE_IOCAP_ATOMIC64K			= 0x00000100
.head 4 -  Number: SQLITE_IOCAP_SAFE_APPEND		= 0x00000200
.head 4 -  Number: SQLITE_IOCAP_SEQUENTIAL		= 0x00000400
.head 4 -  Number: SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	= 0x00000800
.head 4 -  Number: SQLITE_IOCAP_POWERSAFE_OVERWRITE	= 0x00001000
.head 4 -  Number: SQLITE_IOCAP_IMMUTABLE			= 0x00002000
.head 4 -  Number: SQLITE_IOCAP_BATCH_ATOMIC		= 0x00004000
.head 4 -  !
.head 4 -  Number: SQLITE_LOCK_NONE		= 0
.head 4 -  Number: SQLITE_LOCK_SHARED		= 1
.head 4 -  Number: SQLITE_LOCK_RESERVED		= 2
.head 4 -  Number: SQLITE_LOCK_PENDING		= 3
.head 4 -  Number: SQLITE_LOCK_EXCLUSIVE		= 4
.head 4 -  !
.head 4 -  ! Configuration Options		>>>>
.head 4 -  Number: SQLITE_CONFIG_SINGLETHREAD		= 1	!  nil */
.head 4 -  Number: SQLITE_CONFIG_MULTITHREAD		= 2	!  nil */
.head 4 -  Number: SQLITE_CONFIG_SERIALIZED		= 3	!  nil */
.head 4 -  Number: SQLITE_CONFIG_MALLOC			= 4	!  sqlite3_mem_methods* */
.head 4 -  Number: SQLITE_CONFIG_GETMALLOC		= 5	!  sqlite3_mem_methods* */
.head 4 -  Number: SQLITE_CONFIG_SCRATCH			= 6	!  No longer used */
.head 4 -  Number: SQLITE_CONFIG_PAGECACHE		= 7	!  void*, int sz, int N */
.head 4 -  Number: SQLITE_CONFIG_HEAP			= 8	!  void*, int nByte, int min */
.head 4 -  Number: SQLITE_CONFIG_MEMSTATUS		= 9	!  boolean */
.head 4 -  Number: SQLITE_CONFIG_MUTEX			= 10	!  sqlite3_mutex_methods* */
.head 4 -  Number: SQLITE_CONFIG_GETMUTEX		= 11	!  sqlite3_mutex_methods* */
.head 4 -  Number: SQLITE_CONFIG_LOOKASIDE		= 13	!  int int */
.head 4 -  Number: SQLITE_CONFIG_PCACHE			= 14	!  no-op */
.head 4 -  Number: SQLITE_CONFIG_GETPCACHE		= 15	!  no-op */
.head 4 -  Number: SQLITE_CONFIG_LOG			= 16	!  xFunc, void* */
.head 4 -  Number: SQLITE_CONFIG_URI			= 17	!  int */
.head 4 -  Number: SQLITE_CONFIG_PCACHE2			= 18	!  sqlite3_pcache_methods2* */
.head 4 -  Number: SQLITE_CONFIG_GETPCACHE2		= 19	!  sqlite3_pcache_methods2* */
.head 4 -  Number: SQLITE_CONFIG_COVERING_INDEX_SCAN	= 20	!  int */
.head 4 -  Number: SQLITE_CONFIG_SQLLOG			= 21	!  xSqllog, void* */
.head 4 -  Number: SQLITE_CONFIG_MMAP_SIZE		= 22	!  sqlite3_int64, sqlite3_int64 */
.head 4 -  Number: SQLITE_CONFIG_WIN32_HEAPSIZE		= 23	!  int nByte */
.head 4 -  Number: SQLITE_CONFIG_PCACHE_HDRSZ		= 24	!  int *psz */
.head 4 -  Number: SQLITE_CONFIG_PMASZ			= 25	!  unsigned int szPma */
.head 4 -  Number: SQLITE_CONFIG_STMTJRNL_SPILL		= 26	!  int nByte */
.head 4 -  Number: SQLITE_CONFIG_SMALL_MALLOC		= 27	!  boolean */
.head 4 -  Number: SQLITE_CONFIG_SORTERREF_SIZE		= 28	!  int nByte */
.head 4 -  !
.head 4 -  ! Run-Time Limit Categories		>>>>
.head 4 -  Number: SQLITE_LIMIT_LENGTH			= 0
.head 4 -  Number: SQLITE_LIMIT_SQL_LENGTH		= 1
.head 4 -  Number: SQLITE_LIMIT_COLUMN			= 2
.head 4 -  Number: SQLITE_LIMIT_EXPR_DEPTH		= 3
.head 4 -  Number: SQLITE_LIMIT_COMPOUND_SELECT		= 4
.head 4 -  Number: SQLITE_LIMIT_VDBE_OP			= 5
.head 4 -  Number: SQLITE_LIMIT_FUNCTION_ARG		= 6
.head 4 -  Number: SQLITE_LIMIT_ATTACHED			= 7
.head 4 -  Number: SQLITE_LIMIT_LIKE_PATTERN_LENGTH	= 8
.head 4 -  Number: SQLITE_LIMIT_VARIABLE_NUMBER		= 9
.head 4 -  Number: SQLITE_LIMIT_TRIGGER_DEPTH		= 10
.head 4 -  Number: SQLITE_LIMIT_WORKER_THREADS		= 11
.head 4 -  !
.head 4 -  Number: SQLITE_STATIC			= 0
.head 4 -  Number: SQLITE_TRANSIENT		= -1
.head 4 -  !
.head 4 -  Number: SQLITE_UTF8			= 1	! /* IMP: R-37514-35566 */
.head 4 -  Number: SQLITE_UTF16LE			= 2	! /* IMP: R-03371-37637 */
.head 4 -  Number: SQLITE_UTF16BE			= 3	! /* IMP: R-51971-34154 */
.head 4 -  Number: SQLITE_UTF16			= 4	! /* Use native byte order */
.head 4 -  Number: SQLITE_ANY			= 5	! /* Deprecated */
.head 4 -  Number: SQLITE_UTF16_ALIGNED		= 8	! /* sqlite3_create_collation only */
.head 4 -  !
.head 4 -  Number: SQLITE_DBCONFIG_MAINDBNAME			= 1000		!  const char* */
.head 4 -  Number: SQLITE_DBCONFIG_LOOKASIDE			= 1001		!  void* int int */
.head 4 -  Number: SQLITE_DBCONFIG_ENABLE_FKEY			= 1002		!  int int* */
.head 4 -  Number: SQLITE_DBCONFIG_ENABLE_TRIGGER		= 1003		!  int int* */
.head 4 -  Number: SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER	= 1004		!  int int* */
.head 4 -  Number: SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION	= 1005		!  int int* */
.head 4 -  Number: SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE		= 1006		!  int int* */
.head 4 -  Number: SQLITE_DBCONFIG_ENABLE_QPSG			= 1007		!  int int* */
.head 4 -  Number: SQLITE_DBCONFIG_TRIGGER_EQP			= 1008		!  int int* */
.head 4 -  Number: SQLITE_DBCONFIG_RESET_DATABASE		= 1009		!  int int* */
.head 4 -  Number: SQLITE_DBCONFIG_DEFENSIVE			= 1010		!  int int* */
.head 4 -  Number: SQLITE_DBCONFIG_MAX				= 1010		!  Largest DBCONFIG */
.head 4 -  !
.head 4 -  Number: SQLITE_DBSTATUS_LOOKASIDE_USED		= 0
.head 4 -  Number: SQLITE_DBSTATUS_CACHE_USED			= 1
.head 4 -  Number: SQLITE_DBSTATUS_SCHEMA_USED			= 2
.head 4 -  Number: SQLITE_DBSTATUS_STMT_USED			= 3
.head 4 -  Number: SQLITE_DBSTATUS_LOOKASIDE_HIT			= 4
.head 4 -  Number: SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE		= 5
.head 4 -  Number: SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL		= 6
.head 4 -  Number: SQLITE_DBSTATUS_CACHE_HIT			= 7
.head 4 -  Number: SQLITE_DBSTATUS_CACHE_MISS			= 8
.head 4 -  Number: SQLITE_DBSTATUS_CACHE_WRITE			= 9
.head 4 -  Number: SQLITE_DBSTATUS_DEFERRED_FKS			= 10
.head 4 -  Number: SQLITE_DBSTATUS_CACHE_USED_SHARED		= 11
.head 4 -  Number: SQLITE_DBSTATUS_CACHE_SPILL			= 12
.head 4 -  Number: SQLITE_DBSTATUS_MAX				= 12		! /* = Largest defined DBSTATUS
.head 4 -  !
.head 4 -  Number: SQLITE_SCANSTAT_NLOOP		= 0
.head 4 -  Number: SQLITE_SCANSTAT_NVISIT		= 1
.head 4 -  Number: SQLITE_SCANSTAT_EST		= 2
.head 4 -  Number: SQLITE_SCANSTAT_NAME		= 3
.head 4 -  Number: SQLITE_SCANSTAT_EXPLAIN	= 4
.head 4 -  Number: SQLITE_SCANSTAT_SELECTID	= 5
.head 4 -  !
.head 4 -  Number: SQLITE_FCNTL_LOCKSTATE			= 1
.head 4 -  Number: SQLITE_FCNTL_GET_LOCKPROXYFILE	= 2
.head 4 -  Number: SQLITE_FCNTL_SET_LOCKPROXYFILE	= 3
.head 4 -  Number: SQLITE_FCNTL_LAST_ERRNO		= 4
.head 4 -  Number: SQLITE_FCNTL_SIZE_HINT			= 5
.head 4 -  Number: SQLITE_FCNTL_CHUNK_SIZE		= 6
.head 4 -  Number: SQLITE_FCNTL_FILE_POINTER		= 7
.head 4 -  Number: SQLITE_FCNTL_SYNC_OMITTED		= 8
.head 4 -  Number: SQLITE_FCNTL_WIN32_AV_RETRY		= 9
.head 4 -  Number: SQLITE_FCNTL_PERSIST_WAL		= 10
.head 4 -  Number: SQLITE_FCNTL_OVERWRITE		= 11
.head 4 -  Number: SQLITE_FCNTL_VFSNAME			= 12
.head 4 -  Number: SQLITE_FCNTL_POWERSAFE_OVERWRITE	= 13
.head 4 -  Number: SQLITE_FCNTL_PRAGMA			= 14
.head 4 -  Number: SQLITE_FCNTL_BUSYHANDLER		= 15
.head 4 -  Number: SQLITE_FCNTL_TEMPFILENAME		= 16
.head 4 -  Number: SQLITE_FCNTL_MMAP_SIZE			= 18
.head 4 -  Number: SQLITE_FCNTL_TRACE			= 19
.head 4 -  Number: SQLITE_FCNTL_HAS_MOVED		= 20
.head 4 -  Number: SQLITE_FCNTL_SYNC			= 21
.head 4 -  Number: SQLITE_FCNTL_COMMIT_PHASETWO		= 22
.head 4 -  Number: SQLITE_FCNTL_WIN32_SET_HANDLE		= 23
.head 4 -  Number: SQLITE_FCNTL_WAL_BLOCK		= 24
.head 4 -  Number: SQLITE_FCNTL_ZIPVFS			= 25
.head 4 -  Number: SQLITE_FCNTL_RBU			= 26
.head 4 -  Number: SQLITE_FCNTL_VFS_POINTER		= 27
.head 4 -  Number: SQLITE_FCNTL_JOURNAL_POINTER		= 28
.head 4 -  Number: SQLITE_FCNTL_WIN32_GET_HANDLE		= 29
.head 4 -  Number: SQLITE_FCNTL_PDB			= 30
.head 4 -  Number: SQLITE_FCNTL_BEGIN_ATOMIC_WRITE	= 31
.head 4 -  Number: SQLITE_FCNTL_COMMIT_ATOMIC_WRITE	= 32
.head 4 -  Number: SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE	= 33
.head 4 -  Number: SQLITE_FCNTL_LOCK_TIMEOUT		= 34
.head 4 -  Number: SQLITE_FCNTL_DATA_VERSION		= 35
.head 4 -  !
.head 4 -  ! Virtual Table Constraint Operator Codes	>>>>
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_EQ		= 2
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_GT		= 4
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_LE		= 8
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_LT		= 16
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_GE		= 32
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_MATCH	= 64
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_LIKE		= 65
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_GLOB		= 66
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_REGEXP	= 67
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_NE		= 68
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_ISNOT		= 69
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_ISNOTNULL	= 70
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_ISNULL	= 71
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_IS		= 72
.head 4 -  Number: SQLITE_INDEX_CONSTRAINT_FUNCTION	= 150
.head 4 -  !
.head 4 -  ! Mutex Types	>>>>
.head 4 -  Number: SQLITE_MUTEX_FAST			= 0
.head 4 -  Number: SQLITE_MUTEX_RECURSIVE		= 1
.head 4 -  Number: SQLITE_MUTEX_STATIC_MASTER		= 2
.head 4 -  Number: SQLITE_MUTEX_STATIC_MEM		= 3 		!  sqlite3_malloc() */
.head 4 -  Number: SQLITE_MUTEX_STATIC_MEM2		= 4 		!  NOT USED */
.head 4 -  Number: SQLITE_MUTEX_STATIC_OPEN		= 4 		!  sqlite3BtreeOpen() */
.head 4 -  Number: SQLITE_MUTEX_STATIC_PRNG		= 5 		!  sqlite3_randomness() */
.head 4 -  Number: SQLITE_MUTEX_STATIC_LRU		= 6 		!  lru page list */
.head 4 -  Number: SQLITE_MUTEX_STATIC_LRU2		= 7 		!  NOT USED */
.head 4 -  Number: SQLITE_MUTEX_STATIC_PMEM		= 7 		!  sqlite3PageMalloc() */
.head 4 -  Number: SQLITE_MUTEX_STATIC_APP1		= 8 		!  For use by application */
.head 4 -  Number: SQLITE_MUTEX_STATIC_APP2		= 9 		!  For use by application */
.head 4 -  Number: SQLITE_MUTEX_STATIC_APP3		= 10 		!  For use by application */
.head 4 -  Number: SQLITE_MUTEX_STATIC_VFS1		= 11 		!  For use by built-in VFS */
.head 4 -  Number: SQLITE_MUTEX_STATIC_VFS2		= 12 		!  For use by extension VFS */
.head 4 -  Number: SQLITE_MUTEX_STATIC_VFS3		= 13 		!  For use by application VFS */
.head 4 -  !
.head 4 -  ! Synchronization Type Flags		>>>>
.head 4 -  Number: SQLITE_SYNC_NORMAL		= 0x00002
.head 4 -  Number: SQLITE_SYNC_FULL		= 0x00003
.head 4 -  Number: SQLITE_SYNC_DATAONLY		= 0x00010
.head 4 -  !
.head 4 -  String: scMEMORY				= ":memory:"
.head 3 -  User
.head 3 -  Enumerations
.head 2 -  Resources
.head 2 -  Variables
.head 2 +  Internal Functions
.head 3 +  Function: SQLite_BackupFinish
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_backup_finish( pnDBHandle )
.head 3 +  Function: SQLite_BackupPageCount
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_backup_pagecount( pnDBHandle )
.head 3 +  Function: SQLite_BackupRemaining
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_backup_remaining( pnDBHandle )
.head 3 +  Function: SQLite_BackupStep
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 5 -  Number: pnPage
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_backup_step( pnDBHandle, pnPage )
.head 3 +  Function: SQLite_BindInt
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 5 -  Number: pnIndex
.head 5 -  Number: pnValue
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_bind_int( pnStmtPtr, pnIndex, pnValue )
.head 3 +  Function: SQLite_BindDouble
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 5 -  Number: pnIndex
.head 5 -  Number: pnValue
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_bind_double( pnStmtPtr, pnIndex, pnValue )
.head 3 +  Function: SQLite_BindNull
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 5 -  Number: pnIndex
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_bind_null( pnStmtPtr, pnIndex )
.head 3 +  Function: SQLite_BindParameterCount
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_bind_parameter_count( pnStmtPtr )
.head 3 +  Function: SQLite_BindValue
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 5 -  Number: pnIndex
.head 5 -  Number: pnValuePtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_bind_value( pnStmtPtr, pnIndex, pnValuePtr )
.head 3 +  Function: SQLite_Changes
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_changes( pnDBHandle )
.head 3 +  Function: SQLite_ClearBindings
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_clear_bindings( pnStmtPtr )
.head 3 +  Function: SQLite_Close
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_close( pnDBHandle )
.head 3 +  Function: SQLite_Close_v2
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_close_v2( pnDBHandle )
.head 3 +  Function: SQLite_ColumnCount
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_column_count( pnStmtPtr )
.head 3 +  Function: SQLite_ColumnBytes
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 5 -  Number: pnColumnIndex
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_column_bytes( pnStmtPtr, pnColumnIndex )
.head 3 +  Function: SQLite_ColumnDouble
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 5 -  Number: pnColumnIndex
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_column_double( pnStmtPtr, pnColumnIndex )
.head 3 +  Function: SQLite_ColumnInt
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 5 -  Number: pnColumnIndex
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_column_int( pnStmtPtr, pnColumnIndex )
.head 3 +  Function: SQLite_ColumnType
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 5 -  Number: pnColumnIndex
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_column_type( pnStmtPtr, pnColumnIndex )
.head 3 +  Function: SQLite_ColumnValue
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 5 -  Number: pnColumnIndex
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_column_value( pnStmtPtr, pnColumnIndex )
.head 3 +  Function: SQLite_DataCount
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_data_count( pnStmtPtr )
.head 3 +  Function: SQLite_DbCacheFlush
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_db_cacheflush( pnDBHandle )
.head 3 +  Function: SQLite_DbHandle
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_db_handle( pnStmtPtr )
.head 3 +  Function: SQLite_DbMutex
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_db_mutex( pnDBHandle )
.head 3 +  Function: SQLite_DbReleaseMemory
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_db_release_memory( pnDBHandle )
.head 3 +  Function: SQLite_DbStatus
.head 4 -  Description: int sqlite3_status(int op, int *pCurrent, int *pHighwater, int resetFlag);
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 5 -  Number: pnParam
.head 5 -  Receive Number: rpnCurrent
.head 5 -  Receive Number: rpnHighwater
.head 5 -  Number: pnResetFlag
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_db_status( pnDBHandle, pnParam, rpnCurrent, rpnHighwater, pnResetFlag )
.head 3 +  Function: SQLite_EnableLoadExtension
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 5 -  Number: pnOnOff
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_enable_load_extension( pnDBHandle, pnOnOff )
.head 3 +  Function: SQLite_EnableSharedCache
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnOnOff
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_enable_shared_cache( pnOnOff )
.head 3 +  Function: SQLite_ErrCode
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_errcode( pnDBHandle )
.head 3 +  Function: SQLite_ExtendedResultCodes
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 5 -  Number: pnDBOnOff
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_extended_result_codes( pnDBHandle, pnDBOnOff )
.head 3 +  Function: SQLite_ExtendedErrCode
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_extended_errcode( pnDBHandle )
.head 3 +  Function: SQLite_Finalize
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_finalize( pnStmtPtr )
.head 3 +  Function: SQLite_Free
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: pnPtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Call sqlite3_free( pnPtr )
.head 3 +  Function: SQLite_GetAutoCommit
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_get_autocommit( pnDBHandle )
.head 3 +  Function: SQLite_Initialize
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_initialize( )
.head 3 +  Function: SQLite_Interrupt
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Call sqlite3_interrupt( pnDBHandle )
.head 3 +  Function: SQLite_KeywordCount
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_keyword_count( )
.head 3 +  Function: SQLite_LibVersionNumber
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_libversion_number( )
.head 3 +  Function: SQLite_Limit
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 5 -  Number: pnId
.head 5 -  Number: pnValue
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_limit( pnDBHandle, pnId, pnValue )
.head 3 +  Function: SQLite_Malloc
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnBytes
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_malloc( pnBytes )
.head 3 +  Function: SQLite_NextStmt
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 5 -  Number: pnStmtPtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_next_stmt( pnDBHandle, pnStmtPtr )
.head 3 +  Function: SQLite_OsEnd
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_os_end(  )
.head 3 +  Function: SQLite_OsInit
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_os_init(  )
.head 3 +  Function: SQLite_Realloc
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnPtr
.head 5 -  Number: pnBytes
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_realloc( pnPtr, pnBytes )
.head 3 +  Function: SQLite_ReleaseMemory
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnBytes
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_release_memory( pnBytes )
.head 3 +  Function: SQLite_Reset
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_reset( pnStmtPtr )
.head 3 +  Function: SQLite_ResetAutoExtension
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Call sqlite3_reset_auto_extension( )
.head 3 +  Function: SQLite_Shutdown
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_shutdown( )
.head 3 +  Function: SQLite_Sleep
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnMillisecs
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_sleep( pnMillisecs )
.head 3 +  Function: SQLite_Status
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnParam
.head 5 -  Receive Number: rpnCurrent
.head 5 -  Receive Number: rpnHighwater
.head 5 -  Number: pnResetFlag
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_status( pnParam, rpnCurrent, rpnHighwater, pnResetFlag )
.head 3 +  Function: SQLite_Step
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_step( pnStmtPtr )
.head 3 +  Function: SQLite_StmtBusy
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_stmt_busy( pnStmtPtr )
.head 3 +  Function: SQLite_StmtReadOnly
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_stmt_readonly( pnStmtPtr )
.head 3 +  Function: SQLite_StmtStatus
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnStmtPtr
.head 5 -  Number: pnOp
.head 5 -  Number: pnResetFlag
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_stmt_status( pnStmtPtr, pnOp, pnResetFlag )
.head 3 +  Function: SQLite_SystemErrNo
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_system_errno( pnDBHandle )
.head 3 +  Function: SQLite_ThreadSafe
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_threadsafe( )
.head 3 +  Function: SQLite_TotalChanges
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnDBHandle
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return sqlite3_total_changes( pnDBHandle )
.head 2 -  Named Menus
.head 2 -  Class Definitions
.head 2 +  Default Classes
.head 3 -  MDI Window: cBaseMDI
.head 3 -  Form Window:
.head 3 -  Dialog Box:
.head 3 -  Table Window:
.head 3 -  Quest Window:
.head 3 -  Data Field:
.head 3 -  Spin Field:
.head 3 -  Multiline Field:
.head 3 -  Pushbutton:
.head 3 -  Radio Button:
.head 3 -  Option Button:
.head 3 -  Check Box:
.head 3 -  Child Table:
.head 3 -  Quest Child Window: cQuickDatabase
.head 3 -  List Box:
.head 3 -  Combo Box:
.head 3 -  Picture:
.head 3 -  Vertical Scroll Bar:
.head 3 -  Horizontal Scroll Bar:
.head 3 -  Column:
.head 3 -  Background Text:
.head 3 -  Group Box:
.head 3 -  Line:
.head 3 -  Frame:
.head 3 -  Custom Control:
.head 3 -  ActiveX:
.head 3 -  ! Grid Window:
.head 3 -  ! Child Grid:
.head 3 -  ! Rich Text Control:
.head 3 -  ! Separator:
.head 3 -  ! Tree Control:
.head 3 -  ! Navigation Bar:
.head 3 -  ! Pane Separator:
.head 3 -  ! Progress Bar:
.head 3 -  ! Date Picker:
.head 3 -  ! Date Time Picker:
.head 3 -  ! Tab Bar:
.head 2 -  Application Actions
.head 1 -  !
.head 1 +  ! Versions.....>>>>
.head 2 +  Version 1.0.0	19-12-2018	Dave Rabelink
.head 3 -  - Initial version
